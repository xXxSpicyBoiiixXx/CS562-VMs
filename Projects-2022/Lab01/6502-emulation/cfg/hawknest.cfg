#
# Custom cc65 script for Hawknest system
#

SYMBOLS {
	__HEADER__:    type = import;
	__STACKSIZE__: type = weak, value = $0D00;
}

MEMORY {
	HEADER_MEM: file = "%O", start = $0000, size = $0004;

	ZP: file = "", start = $0000, size = $0100;

	# ROM (24K)
	ROM:  file = "%O", start = $A000, size = $6000, define = yes, fill = yes;

	IO_SPACE: file = "", start = $8000, size = $2000;

	# cc65 param stack
	STACK_RAM: file = "", start = $0200, size = $0D00, define = yes;

	# RAM
	RAM: file = "", define = yes, start = $1000, size = $7000;
}

SEGMENTS {
	HEADER: load = HEADER_MEM, type = ro;

	ZEROPAGE: load = ZP, type = zp;

	STARTUP: load = ROM, type = ro, define   = yes;
	LOWCODE: load = ROM, type = ro, optional = yes;
	ONCE:    load = ROM, type = ro, optional = yes;
	CODE:    load = ROM, type = ro, define   = yes;
	RODATA:  load = ROM, type = ro, define   = yes;
	DATA:    load = ROM, type = rw, define   = yes, run = RAM;

	VECTORS: load = ROM, type = rw, start = $FFFA;

	BSS:  load = RAM, type = bss, define = yes;
}

FEATURES {
	CONDES: type = constructor,
		label = __CONSTRUCTOR_TABLE__,
		count = __CONSTRUCTOR_COUNT__,
		segment = STARTUP;

	CONDES: type = destructor,
		label = __DESTRUCTOR_TABLE__,
		count = __DESTRUCTOR_COUNT__,
		segment = STARTUP;
}
